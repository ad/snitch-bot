/**
 * Message Formatter Module
 * Formats anonymous feedback messages for the admin group
 */

/**
 * Maps category keys to their full Russian names
 */
const CATEGORY_NAMES = {
  'idea': '–ò–¥–µ—è / –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
  'problem': '–ü—Ä–æ–±–ª–µ–º–∞ / –∂–∞–ª–æ–±–∞',
  'gratitude': '–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å / –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ'
};

/**
 * Maps category keys to their corresponding emojis
 */
const CATEGORY_EMOJIS = {
  'idea': 'üí¨',
  'problem': '‚ö†Ô∏è',
  'gratitude': '‚ù§Ô∏è'
};

/**
 * Maps topic keys to their full Russian names
 */
const TOPIC_NAMES = {
  'processes': '–ü—Ä–æ—Ü–µ—Å—Å—ã',
  'colleagues': '–ö–æ–ª–ª–µ–≥–∏',
  'conditions': '–£—Å–ª–æ–≤–∏—è',
  'salary': '–ó–∞—Ä–ø–ª–∞—Ç–∞',
  'management': '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç',
  'other': '–î—Ä—É–≥–æ–µ'
};

/**
 * Formats an anonymous feedback message for the admin group
 * @param {Object} session - Session object containing message data
 * @param {string} session.category - Selected message category key (idea/problem/gratitude)
 * @param {string} session.topic - Selected message topic key
 * @param {string} session.messageText - User's message text
 * @returns {string} Formatted message for admin group
 */
export function formatAdminMessage(session) {
  const categoryName = CATEGORY_NAMES[session.category] || session.category;
  const categoryEmoji = CATEGORY_EMOJIS[session.category] || 'üì©';
  const topicName = TOPIC_NAMES[session.topic] || session.topic;

  const formattedMessage = `üì© –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

${categoryEmoji} ${categoryName} ‚Üí ${topicName}

–¢–µ–∫—Å—Ç:
${session.messageText || '–±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è'}`;

  return formattedMessage;
}
